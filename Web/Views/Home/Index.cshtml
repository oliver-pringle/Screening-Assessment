@model int;
@{
    ViewData["Title"] = "Home Page";
}
<div class="row">
    <div class="col-12">
        <h1 class="display-4">ClubRight Screening Assessment</h1>
        <p>You have 90 minutes for this assessment. Please say how long and how you found it in "How did you find this assessment?".  (optional: this is your opportunity to show some flair!)</p>
    </div>

    <div class="col-4 text-start pe-5">
        <ol>
            <li class="mb-3">
                While debugging, any changes to the razor page will need to the whole application to be re-built/re-run for changes to take effect. Change the project file so that you can make UI changes without restarting.
            </li>
            <li class="mb-3">
                Create a button on the page that increments a digit on the page (this should be a server side call, not Javascript (apart from any inbuilt ajax functions))
            </li>
            <li class="mb-3">
                Create a second page which can be accessed from the nav menu, the contents of the page should be a header that says "Number of clicks" with a paragraph that says "The button was pressed X times" (replacing X for how many times the button was pressed in question 2)
            </li>
            <li class="mb-3">
                Create a button that takes a string as an input
                <ul>
                    <li>Reverse this string and output it on the page (eg "The quick brown fox" will output as "xof nworb kciuq ehT")</li>
                    <li>Reverse the words from the input string and output it on to the page (eg "The quick brown fox" will output as "fox brown quick The")</li>
                </ul>
            </li>
        </ol>
    </div>

    <div class="col">
        <div class="mb-5">
            <h3>Add your solution to question 2 here</h3>

            <p><button id="incrementButton">Increment number by 1</button></p>
            <p><span id="intValue">@Model</span></p>
            <hr/>
        </div>

        <div class="mb-5">
            <h3>Add your solution to question 3 here</h3>

            <p><textarea id="textToReverse"></textarea></p>
            <p><button id="reverseTextButton">Reverse Text</button></p>
            <p id="reversedText"></p>
            <p id="reversedWords"></p>
            <hr/>
        </div>

        <div class="mb-5">
            <h4>How did you find this assessment?</h4>
            
            <p>
                This assessment was fun, I didn't have .net 9.0 SDK installed, Once I got the project running I would say took me about an hour.<br />
                Also have done CSS Hot reload, but never Razor page reload before so learnt something new there.<br />
                I used a simple memoryCache to store the number value, in a more substantial project I would have built a more comprehensive solution by encapsultating memoryCache in a dedicated service class.<br />
                I used jquery because the librarys are included, although my preference would be to write all script in Typescript files written on Object Literal notation then compile with Node.js and do away with Jquery all together. 
            </p>
          


        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $('#incrementButton').click(function () {
                $.post('@Url.Action("IncrementNumber", "Home")')
                .done(function (data) {
                    $('#intValue').html(data.value.toString());
                })
                .fail(function() {
                    alert("error trying to increment value");
                });
            });

            $('#reverseTextButton').click(function () {
                var textToReverse = reverseString($('#textToReverse').val());
                $('#reversedText').html(textToReverse);

                var wordsToReverse = reverseWords($('#textToReverse').val());
                $('#reversedWords').html(wordsToReverse);

            });
        });

        function reverseString(str) {
            var reversed = '';
            for (var i = str.length - 1; i >= 0 ; i--) {
                reversed += str[i];
            }
            return reversed;
        }

        function reverseWords(str) {
            var reversedWords = str.split(' ').reverse().join(' ');
            return reversedWords;
        }

    </script>

}
